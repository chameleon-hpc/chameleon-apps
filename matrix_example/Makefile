.PHONY: clean default debug simulate-work run trace run-mpi-debug run-paper-experiments

FILE_NAMES ?= matrix_example_api.cpp
PROG ?= main
MATRIX_SIZE ?= 300
ITERATIVE_VERSION ?= 1
NUM_ITERATIONS ?= 1
PARALLEL_INIT ?= 1
COMPILE_CHAMELEON ?= 1
COMPILE_TASKING ?= 1
SLOW_NODE_TIME ?= 1
SLOW_FREQ ?= 1
WRAPPER_RR ?= ./wrapper_rr.sh

NUM_TASKS ?= $(shell echo $$(( $(OMP_NUM_THREADS) * 100 )))

RUN_SETTINGS=OMP_PLACES=cores OMP_PROC_BIND=spread I_MPI_PIN=1 I_MPI_PIN_DOMAIN=auto I_MPI_FABRICS="shm:tmi" I_MPI_DEBUG=5
RUN_SETTINGS_SLURM=OMP_PLACES=cores OMP_PROC_BIND=close I_MPI_FABRICS="shm:tmi" I_MPI_DEBUG=5
MPI_EXPORT_VARS=-genvlist PATH,CPLUS_INCLUDE_PATH,C_INCLUDE_PATH,CPATH,INCLUDE,LD_LIBRARY_PATH,LIBRARY_PATH,I_MPI_PIN,I_MPI_DEBUG,I_MPI_PIN_DOMAIN,I_MPI_TMI_NBITS_RANK,OMP_NUM_THREADS,OMP_PLACES,OMP_PROC_BIND,I_MPI_FABRICS
MPI_EXPORT_VARS_SLURM=--export=PATH,CPLUS_INCLUDE_PATH,C_INCLUDE_PATH,CPATH,INCLUDE,LD_LIBRARY_PATH,LIBRARY_PATH,I_MPI_DEBUG,I_MPI_TMI_NBITS_RANK,OMP_NUM_THREADS,OMP_PLACES,OMP_PROC_BIND,KMP_AFFINITY,I_MPI_FABRICS

CXX_COMPILE_FLAGS=-std=c++11 -DITERATIVE_VERSION=${ITERATIVE_VERSION} -DNUM_ITERATIONS=${NUM_ITERATIONS} -DPARALLEL_INIT=${PARALLEL_INIT} -DCOMPILE_CHAMELEON=${COMPILE_CHAMELEON} -DCOMPILE_TASKING=${COMPILE_TASKING}
LINKER_FLAGS=-lm -lchameleon -lstdc++

ifeq ($(CXX),clang++)
    MPICXX=I_MPI_CXX=clang++ mpiicpc
    CXX_COMPILE_FLAGS+=-fopenmp -fopenmp-targets=x86_64-unknown-linux-gnu # used with target offloading
    #CXX_COMPILE_FLAGS+=-fopenmp # used with manual API
else ifeq ($(CXX),icpc)
    MPICXX=I_MPI_CXX=icpc mpiicpc
    MPIF90=I_MPI_F90=ifort mpiifort
    CXX_COMPILE_FLAGS+=-qopenmp -qno-openmp-offload -Wno-unknown-pragmas
endif

default: 
	${MPICXX} -g -O3 -o $(PROG) $(CXX_COMPILE_FLAGS) $(FILE_NAMES) $(LINKER_FLAGS)
	
debug: 
	${MPICXX} -g -O0 -o $(PROG) $(CXX_COMPILE_FLAGS) $(FILE_NAMES) $(LINKER_FLAGS)

simulate-work:
	${MPICXX} -O3 -o $(PROG) $(CXX_COMPILE_FLAGS) -DSIMULATE_CONST_WORK=1 -DCALC_SPEEDUP=0 $(FILE_NAMES) $(LINKER_FLAGS)

run:
	$(RUN_SETTINGS) mpiexec.hydra -np 4 -genvall $(PROG) $(MATRIX_SIZE) 70 50 30 20

run-paper-experiments:
	$(RUN_SETTINGS_SLURM) mpiexec ${FLAGS_MPI_BATCH} ${MPI_EXPORT_VARS} $(PROG) ${MATRIX_SIZE} ${NUM_TASKS} ${NUM_TASKS} ${NUM_TASKS}
	@#$(RUN_SETTINGS_SLURM) mpiexec ${FLAGS_MPI_BATCH} ${MPI_EXPORT_VARS} $(PROG) ${MATRIX_SIZE} ${NUM_TASKS} ${NUM_TASKS} ${NUM_TASKS} ${NUM_TASKS}
	
run-paper-experiments-freq:
	$(RUN_SETTINGS_SLURM) mpiexec ${FLAGS_MPI_BATCH} ${MPI_EXPORT_VARS} ${WRAPPER_RR} ${SLOW_FREQ} ${SLOW_NODE_TIME} "$(PROG) ${MATRIX_SIZE} ${NUM_TASKS} ${NUM_TASKS} ${NUM_TASKS}"

trace:
	$(RUN_SETTINGS) mpiexec.hydra -trace -np 2 -genvall $(PROG) $(MATRIX_SIZE)

run-mpi-debug:
	$(RUN_SETTINGS) LIBOMPTARGET_DEBUG=1 mpiexec.hydra -np 2 $(PROG) $(MATRIX_SIZE)

clean:
	rm -f $(PROG) *.o 
